// Generated from /home/mauricio/Documents/Obsidian/2024/Ciclo2/Paradigmas/Evaluaciones/Proyectos/Proyecto 2/proyectoBiesVM/bies/biesVM/grammar/biesVM.g4 by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,62,422,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,1,0,1,0,1,0,1,
0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,3,1,4,1,
4,1,4,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,9,1,
9,1,9,1,9,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,
13,1,13,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,17,1,17,1,17,
1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,3,17,206,8,17,1,18,
1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,
21,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,25,1,25,1,25,
1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,
29,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,33,1,33,
1,33,1,33,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,
37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,40,1,40,1,40,
1,40,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,44,1,
44,1,44,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,48,
1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,
51,1,51,1,52,1,52,1,52,1,52,1,52,1,53,1,53,5,53,348,8,53,10,53,12,53,351,
9,53,1,54,3,54,354,8,54,1,54,4,54,357,8,54,11,54,12,54,358,1,54,1,54,4,54,
363,8,54,11,54,12,54,364,3,54,367,8,54,1,54,1,54,3,54,371,8,54,1,54,4,54,
374,8,54,11,54,12,54,375,3,54,378,8,54,1,55,1,55,5,55,382,8,55,10,55,12,
55,385,9,55,1,56,1,56,5,56,389,8,56,10,56,12,56,392,9,56,1,56,1,56,1,57,
1,57,3,57,398,8,57,1,58,1,58,5,58,402,8,58,10,58,12,58,405,9,58,1,58,1,58,
1,59,1,59,1,60,4,60,412,8,60,11,60,12,60,413,1,60,1,60,1,61,4,61,419,8,61,
11,61,12,61,420,0,0,62,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,
11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,
23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,
35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,
47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,
58,117,59,119,60,121,61,123,62,1,0,10,3,0,48,57,65,90,97,122,2,0,43,43,45,
45,1,0,48,57,2,0,69,69,101,101,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,
95,97,122,3,0,10,10,13,13,34,34,2,0,10,10,13,13,2,0,9,9,32,32,3,0,9,10,13,
13,32,32,437,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,
0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,
0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,
33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,
0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,
1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,
0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,
0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,
89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,
0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,
0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,
0,121,1,0,0,0,0,123,1,0,0,0,1,125,1,0,0,0,3,131,1,0,0,0,5,139,1,0,0,0,7,
142,1,0,0,0,9,145,1,0,0,0,11,148,1,0,0,0,13,152,1,0,0,0,15,156,1,0,0,0,17,
159,1,0,0,0,19,163,1,0,0,0,21,167,1,0,0,0,23,171,1,0,0,0,25,175,1,0,0,0,
27,179,1,0,0,0,29,183,1,0,0,0,31,185,1,0,0,0,33,187,1,0,0,0,35,205,1,0,0,
0,37,207,1,0,0,0,39,211,1,0,0,0,41,215,1,0,0,0,43,219,1,0,0,0,45,223,1,0,
0,0,47,227,1,0,0,0,49,231,1,0,0,0,51,234,1,0,0,0,53,237,1,0,0,0,55,241,1,
0,0,0,57,244,1,0,0,0,59,248,1,0,0,0,61,252,1,0,0,0,63,256,1,0,0,0,65,260,
1,0,0,0,67,264,1,0,0,0,69,268,1,0,0,0,71,272,1,0,0,0,73,276,1,0,0,0,75,280,
1,0,0,0,77,284,1,0,0,0,79,288,1,0,0,0,81,292,1,0,0,0,83,296,1,0,0,0,85,300,
1,0,0,0,87,304,1,0,0,0,89,308,1,0,0,0,91,311,1,0,0,0,93,315,1,0,0,0,95,319,
1,0,0,0,97,323,1,0,0,0,99,327,1,0,0,0,101,331,1,0,0,0,103,335,1,0,0,0,105,
340,1,0,0,0,107,345,1,0,0,0,109,353,1,0,0,0,111,379,1,0,0,0,113,386,1,0,
0,0,115,397,1,0,0,0,117,399,1,0,0,0,119,408,1,0,0,0,121,411,1,0,0,0,123,
418,1,0,0,0,125,126,5,65,0,0,126,127,5,82,0,0,127,128,5,71,0,0,128,129,5,
83,0,0,129,130,5,58,0,0,130,2,1,0,0,0,131,132,5,80,0,0,132,133,5,65,0,0,
133,134,5,82,0,0,134,135,5,69,0,0,135,136,5,78,0,0,136,137,5,84,0,0,137,
138,5,58,0,0,138,4,1,0,0,0,139,140,5,66,0,0,140,141,5,82,0,0,141,6,1,0,0,
0,142,143,5,66,0,0,143,144,5,84,0,0,144,8,1,0,0,0,145,146,5,66,0,0,146,147,
5,70,0,0,147,10,1,0,0,0,148,149,5,78,0,0,149,150,5,79,0,0,150,151,5,80,0,
0,151,12,1,0,0,0,152,153,5,73,0,0,153,154,5,78,0,0,154,155,5,80,0,0,155,
14,1,0,0,0,156,157,5,69,0,0,157,158,5,81,0,0,158,16,1,0,0,0,159,160,5,67,
0,0,160,161,5,65,0,0,161,162,5,84,0,0,162,18,1,0,0,0,163,164,5,83,0,0,164,
165,5,78,0,0,165,166,5,84,0,0,166,20,1,0,0,0,167,168,5,84,0,0,168,169,5,
79,0,0,169,170,5,83,0,0,170,22,1,0,0,0,171,172,5,76,0,0,172,173,5,82,0,0,
173,174,5,75,0,0,174,24,1,0,0,0,175,176,5,84,0,0,176,177,5,79,0,0,177,178,
5,76,0,0,178,26,1,0,0,0,179,180,5,83,0,0,180,181,5,71,0,0,181,182,5,78,0,
0,182,28,1,0,0,0,183,184,5,91,0,0,184,30,1,0,0,0,185,186,5,44,0,0,186,32,
1,0,0,0,187,188,5,93,0,0,188,34,1,0,0,0,189,190,5,110,0,0,190,191,5,117,
0,0,191,192,5,109,0,0,192,193,5,98,0,0,193,194,5,101,0,0,194,206,5,114,0,
0,195,196,5,108,0,0,196,197,5,105,0,0,197,198,5,115,0,0,198,206,5,116,0,
0,199,200,5,115,0,0,200,201,5,116,0,0,201,202,5,114,0,0,202,203,5,105,0,
0,203,204,5,110,0,0,204,206,5,103,0,0,205,189,1,0,0,0,205,195,1,0,0,0,205,
199,1,0,0,0,206,36,1,0,0,0,207,208,5,76,0,0,208,209,5,68,0,0,209,210,5,86,
0,0,210,38,1,0,0,0,211,212,5,65,0,0,212,213,5,68,0,0,213,214,5,68,0,0,214,
40,1,0,0,0,215,216,5,77,0,0,216,217,5,85,0,0,217,218,5,76,0,0,218,42,1,0,
0,0,219,220,5,83,0,0,220,221,5,85,0,0,221,222,5,66,0,0,222,44,1,0,0,0,223,
224,5,68,0,0,224,225,5,73,0,0,225,226,5,86,0,0,226,46,1,0,0,0,227,228,5,
78,0,0,228,229,5,69,0,0,229,230,5,71,0,0,230,48,1,0,0,0,231,232,5,69,0,0,
232,233,5,84,0,0,233,50,1,0,0,0,234,235,5,71,0,0,235,236,5,84,0,0,236,52,
1,0,0,0,237,238,5,71,0,0,238,239,5,84,0,0,239,240,5,69,0,0,240,54,1,0,0,
0,241,242,5,76,0,0,242,243,5,84,0,0,243,56,1,0,0,0,244,245,5,76,0,0,245,
246,5,84,0,0,246,247,5,69,0,0,247,58,1,0,0,0,248,249,5,82,0,0,249,250,5,
69,0,0,250,251,5,84,0,0,251,60,1,0,0,0,252,253,5,72,0,0,253,254,5,76,0,0,
254,255,5,84,0,0,255,62,1,0,0,0,256,257,5,65,0,0,257,258,5,80,0,0,258,259,
5,80,0,0,259,64,1,0,0,0,260,261,5,80,0,0,261,262,5,82,0,0,262,263,5,78,0,
0,263,66,1,0,0,0,264,265,5,66,0,0,265,266,5,76,0,0,266,267,5,68,0,0,267,
68,1,0,0,0,268,269,5,66,0,0,269,270,5,83,0,0,270,271,5,84,0,0,271,70,1,0,
0,0,272,273,5,76,0,0,273,274,5,68,0,0,274,275,5,70,0,0,275,72,1,0,0,0,276,
277,5,73,0,0,277,278,5,78,0,0,278,279,5,73,0,0,279,74,1,0,0,0,280,281,5,
83,0,0,281,282,5,84,0,0,282,283,5,75,0,0,283,76,1,0,0,0,284,285,5,83,0,0,
285,286,5,82,0,0,286,287,5,75,0,0,287,78,1,0,0,0,288,289,5,76,0,0,289,290,
5,73,0,0,290,291,5,78,0,0,291,80,1,0,0,0,292,293,5,76,0,0,293,294,5,84,0,
0,294,295,5,75,0,0,295,82,1,0,0,0,296,297,5,67,0,0,297,298,5,83,0,0,298,
299,5,84,0,0,299,84,1,0,0,0,300,301,5,73,0,0,301,302,5,78,0,0,302,303,5,
79,0,0,303,86,1,0,0,0,304,305,5,65,0,0,305,306,5,78,0,0,306,307,5,68,0,0,
307,88,1,0,0,0,308,309,5,79,0,0,309,310,5,82,0,0,310,90,1,0,0,0,311,312,
5,88,0,0,312,313,5,79,0,0,313,314,5,82,0,0,314,92,1,0,0,0,315,316,5,78,0,
0,316,317,5,79,0,0,317,318,5,84,0,0,318,94,1,0,0,0,319,320,5,83,0,0,320,
321,5,87,0,0,321,322,5,80,0,0,322,96,1,0,0,0,323,324,5,76,0,0,324,325,5,
78,0,0,325,326,5,84,0,0,326,98,1,0,0,0,327,328,5,76,0,0,328,329,5,69,0,0,
329,330,5,78,0,0,330,100,1,0,0,0,331,332,5,80,0,0,332,333,5,79,0,0,333,334,
5,87,0,0,334,102,1,0,0,0,335,336,5,36,0,0,336,337,5,70,0,0,337,338,5,85,
0,0,338,339,5,78,0,0,339,104,1,0,0,0,340,341,5,36,0,0,341,342,5,69,0,0,342,
343,5,78,0,0,343,344,5,68,0,0,344,106,1,0,0,0,345,349,5,36,0,0,346,348,7,
0,0,0,347,346,1,0,0,0,348,351,1,0,0,0,349,347,1,0,0,0,349,350,1,0,0,0,350,
108,1,0,0,0,351,349,1,0,0,0,352,354,7,1,0,0,353,352,1,0,0,0,353,354,1,0,
0,0,354,356,1,0,0,0,355,357,7,2,0,0,356,355,1,0,0,0,357,358,1,0,0,0,358,
356,1,0,0,0,358,359,1,0,0,0,359,366,1,0,0,0,360,362,5,46,0,0,361,363,7,2,
0,0,362,361,1,0,0,0,363,364,1,0,0,0,364,362,1,0,0,0,364,365,1,0,0,0,365,
367,1,0,0,0,366,360,1,0,0,0,366,367,1,0,0,0,367,377,1,0,0,0,368,370,7,3,
0,0,369,371,7,1,0,0,370,369,1,0,0,0,370,371,1,0,0,0,371,373,1,0,0,0,372,
374,7,2,0,0,373,372,1,0,0,0,374,375,1,0,0,0,375,373,1,0,0,0,375,376,1,0,
0,0,376,378,1,0,0,0,377,368,1,0,0,0,377,378,1,0,0,0,378,110,1,0,0,0,379,
383,7,4,0,0,380,382,7,5,0,0,381,380,1,0,0,0,382,385,1,0,0,0,383,381,1,0,
0,0,383,384,1,0,0,0,384,112,1,0,0,0,385,383,1,0,0,0,386,390,5,34,0,0,387,
389,8,6,0,0,388,387,1,0,0,0,389,392,1,0,0,0,390,388,1,0,0,0,390,391,1,0,
0,0,391,393,1,0,0,0,392,390,1,0,0,0,393,394,5,34,0,0,394,114,1,0,0,0,395,
398,3,109,54,0,396,398,3,113,56,0,397,395,1,0,0,0,397,396,1,0,0,0,398,116,
1,0,0,0,399,403,5,59,0,0,400,402,8,7,0,0,401,400,1,0,0,0,402,405,1,0,0,0,
403,401,1,0,0,0,403,404,1,0,0,0,404,406,1,0,0,0,405,403,1,0,0,0,406,407,
6,58,0,0,407,118,1,0,0,0,408,409,7,8,0,0,409,120,1,0,0,0,410,412,7,9,0,0,
411,410,1,0,0,0,412,413,1,0,0,0,413,411,1,0,0,0,413,414,1,0,0,0,414,415,
1,0,0,0,415,416,6,60,0,0,416,122,1,0,0,0,417,419,7,7,0,0,418,417,1,0,0,0,
419,420,1,0,0,0,420,418,1,0,0,0,420,421,1,0,0,0,421,124,1,0,0,0,16,0,205,
349,353,358,364,366,370,375,377,383,390,397,403,413,420,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class biesVMLexer extends antlr4.Lexer {

    static grammarFileName = "biesVM.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'ARGS:'", "'PARENT:'", "'BR'", "'BT'", "'BF'", 
                         "'NOP'", "'INP'", "'EQ'", "'CAT'", "'SNT'", "'TOS'", 
                         "'LRK'", "'TOL'", "'SGN'", "'['", "','", "']'", 
                         null, "'LDV'", "'ADD'", "'MUL'", "'SUB'", "'DIV'", 
                         "'NEG'", "'ET'", "'GT'", "'GTE'", "'LT'", "'LTE'", 
                         "'RET'", "'HLT'", "'APP'", "'PRN'", "'BLD'", "'BST'", 
                         "'LDF'", "'INI'", "'STK'", "'SRK'", "'LIN'", "'LTK'", 
                         "'CST'", "'INO'", "'AND'", "'OR'", "'XOR'", "'NOT'", 
                         "'SWP'", "'LNT'", "'LEN'", "'POW'", "'$FUN'", "'$END'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, "TYPE", "LDV", "ADD", "MUL", "SUB", 
                          "DIV", "NEG", "EQ", "GT", "GTE", "LT", "LTE", 
                          "RET", "HLT", "APP", "PRN", "BLD", "BST", "LDF", 
                          "INI", "STK", "SRK", "LIN", "LTK", "CST", "INO", 
                          "AND", "OR", "XOR", "NOT", "SWP", "LNT", "LEN", 
                          "POW", "FUN", "END", "LABEL_IDENTIFIER", "NUMBER", 
                          "ID", "STRING", "VALUE", "COMMENT", "ES", "WS", 
                          "NL" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "TYPE", "LDV", 
                      "ADD", "MUL", "SUB", "DIV", "NEG", "EQ", "GT", "GTE", 
                      "LT", "LTE", "RET", "HLT", "APP", "PRN", "BLD", "BST", 
                      "LDF", "INI", "STK", "SRK", "LIN", "LTK", "CST", "INO", 
                      "AND", "OR", "XOR", "NOT", "SWP", "LNT", "LEN", "POW", 
                      "FUN", "END", "LABEL_IDENTIFIER", "NUMBER", "ID", 
                      "STRING", "VALUE", "COMMENT", "ES", "WS", "NL" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

biesVMLexer.EOF = antlr4.Token.EOF;
biesVMLexer.T__0 = 1;
biesVMLexer.T__1 = 2;
biesVMLexer.T__2 = 3;
biesVMLexer.T__3 = 4;
biesVMLexer.T__4 = 5;
biesVMLexer.T__5 = 6;
biesVMLexer.T__6 = 7;
biesVMLexer.T__7 = 8;
biesVMLexer.T__8 = 9;
biesVMLexer.T__9 = 10;
biesVMLexer.T__10 = 11;
biesVMLexer.T__11 = 12;
biesVMLexer.T__12 = 13;
biesVMLexer.T__13 = 14;
biesVMLexer.T__14 = 15;
biesVMLexer.T__15 = 16;
biesVMLexer.T__16 = 17;
biesVMLexer.TYPE = 18;
biesVMLexer.LDV = 19;
biesVMLexer.ADD = 20;
biesVMLexer.MUL = 21;
biesVMLexer.SUB = 22;
biesVMLexer.DIV = 23;
biesVMLexer.NEG = 24;
biesVMLexer.EQ = 25;
biesVMLexer.GT = 26;
biesVMLexer.GTE = 27;
biesVMLexer.LT = 28;
biesVMLexer.LTE = 29;
biesVMLexer.RET = 30;
biesVMLexer.HLT = 31;
biesVMLexer.APP = 32;
biesVMLexer.PRN = 33;
biesVMLexer.BLD = 34;
biesVMLexer.BST = 35;
biesVMLexer.LDF = 36;
biesVMLexer.INI = 37;
biesVMLexer.STK = 38;
biesVMLexer.SRK = 39;
biesVMLexer.LIN = 40;
biesVMLexer.LTK = 41;
biesVMLexer.CST = 42;
biesVMLexer.INO = 43;
biesVMLexer.AND = 44;
biesVMLexer.OR = 45;
biesVMLexer.XOR = 46;
biesVMLexer.NOT = 47;
biesVMLexer.SWP = 48;
biesVMLexer.LNT = 49;
biesVMLexer.LEN = 50;
biesVMLexer.POW = 51;
biesVMLexer.FUN = 52;
biesVMLexer.END = 53;
biesVMLexer.LABEL_IDENTIFIER = 54;
biesVMLexer.NUMBER = 55;
biesVMLexer.ID = 56;
biesVMLexer.STRING = 57;
biesVMLexer.VALUE = 58;
biesVMLexer.COMMENT = 59;
biesVMLexer.ES = 60;
biesVMLexer.WS = 61;
biesVMLexer.NL = 62;



