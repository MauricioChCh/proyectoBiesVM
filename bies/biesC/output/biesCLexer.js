// Generated from ./grammar/biesC.g4 by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,11,89,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,1,0,1,0,1,1,1,1,
1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,5,6,42,8,6,10,6,
12,6,45,9,6,1,6,1,6,1,7,3,7,50,8,7,1,7,4,7,53,8,7,11,7,12,7,54,1,7,1,7,4,
7,59,8,7,11,7,12,7,60,3,7,63,8,7,1,7,1,7,3,7,67,8,7,1,7,4,7,70,8,7,11,7,
12,7,71,3,7,74,8,7,1,8,3,8,77,8,8,1,8,1,8,1,9,1,9,1,10,4,10,84,8,10,11,10,
12,10,85,1,10,1,10,0,0,11,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,
21,11,1,0,6,3,0,10,10,13,13,34,34,2,0,43,43,45,45,1,0,48,57,2,0,69,69,101,
101,2,0,9,9,32,32,3,0,9,10,13,13,32,32,98,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,
0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,
1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,1,23,1,0,0,0,3,25,1,0,0,0,5,27,1,0,0,0,
7,29,1,0,0,0,9,31,1,0,0,0,11,33,1,0,0,0,13,39,1,0,0,0,15,49,1,0,0,0,17,76,
1,0,0,0,19,80,1,0,0,0,21,83,1,0,0,0,23,24,5,40,0,0,24,2,1,0,0,0,25,26,5,
41,0,0,26,4,1,0,0,0,27,28,5,91,0,0,28,6,1,0,0,0,29,30,5,44,0,0,30,8,1,0,
0,0,31,32,5,93,0,0,32,10,1,0,0,0,33,34,5,112,0,0,34,35,5,114,0,0,35,36,5,
105,0,0,36,37,5,110,0,0,37,38,5,116,0,0,38,12,1,0,0,0,39,43,5,34,0,0,40,
42,8,0,0,0,41,40,1,0,0,0,42,45,1,0,0,0,43,41,1,0,0,0,43,44,1,0,0,0,44,46,
1,0,0,0,45,43,1,0,0,0,46,47,5,34,0,0,47,14,1,0,0,0,48,50,7,1,0,0,49,48,1,
0,0,0,49,50,1,0,0,0,50,52,1,0,0,0,51,53,7,2,0,0,52,51,1,0,0,0,53,54,1,0,
0,0,54,52,1,0,0,0,54,55,1,0,0,0,55,62,1,0,0,0,56,58,5,46,0,0,57,59,7,2,0,
0,58,57,1,0,0,0,59,60,1,0,0,0,60,58,1,0,0,0,60,61,1,0,0,0,61,63,1,0,0,0,
62,56,1,0,0,0,62,63,1,0,0,0,63,73,1,0,0,0,64,66,7,3,0,0,65,67,7,1,0,0,66,
65,1,0,0,0,66,67,1,0,0,0,67,69,1,0,0,0,68,70,7,2,0,0,69,68,1,0,0,0,70,71,
1,0,0,0,71,69,1,0,0,0,71,72,1,0,0,0,72,74,1,0,0,0,73,64,1,0,0,0,73,74,1,
0,0,0,74,16,1,0,0,0,75,77,5,13,0,0,76,75,1,0,0,0,76,77,1,0,0,0,77,78,1,0,
0,0,78,79,5,10,0,0,79,18,1,0,0,0,80,81,7,4,0,0,81,20,1,0,0,0,82,84,7,5,0,
0,83,82,1,0,0,0,84,85,1,0,0,0,85,83,1,0,0,0,85,86,1,0,0,0,86,87,1,0,0,0,
87,88,6,10,0,0,88,22,1,0,0,0,11,0,43,49,54,60,62,66,71,73,76,85,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class biesCLexer extends antlr4.Lexer {

    static grammarFileName = "biesC.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'('", "')'", "'['", "','", "']'", "'print'" ];
	static symbolicNames = [ null, null, null, null, null, null, "PRINT", "STRING", 
                          "NUMBER", "NL", "ES", "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "PRINT", "STRING", 
                      "NUMBER", "NL", "ES", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

biesCLexer.EOF = antlr4.Token.EOF;
biesCLexer.T__0 = 1;
biesCLexer.T__1 = 2;
biesCLexer.T__2 = 3;
biesCLexer.T__3 = 4;
biesCLexer.T__4 = 5;
biesCLexer.PRINT = 6;
biesCLexer.STRING = 7;
biesCLexer.NUMBER = 8;
biesCLexer.NL = 9;
biesCLexer.ES = 10;
biesCLexer.WS = 11;



