// Generated from ./grammar/biesC.g4 by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,46,306,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,
2,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,9,1,
10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,13,1,14,1,14,
1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,17,1,
17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,
1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,
23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,25,1,25,5,25,188,8,25,10,25,
12,25,191,9,25,1,25,1,25,1,26,3,26,196,8,26,1,26,4,26,199,8,26,11,26,12,
26,200,1,26,1,26,4,26,205,8,26,11,26,12,26,206,3,26,209,8,26,1,26,1,26,3,
26,213,8,26,1,26,4,26,216,8,26,11,26,12,26,217,3,26,220,8,26,1,27,1,27,1,
27,1,27,1,27,1,27,1,28,1,28,5,28,230,8,28,10,28,12,28,233,9,28,1,29,1,29,
1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,33,1,34,1,34,1,34,1,35,1,35,1,
35,1,36,1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,1,40,1,41,
1,41,1,41,1,42,3,42,269,8,42,1,42,1,42,1,42,1,42,1,43,4,43,276,8,43,11,43,
12,43,277,1,43,1,43,1,44,1,44,1,44,1,44,5,44,286,8,44,10,44,12,44,289,9,
44,1,44,1,44,1,45,1,45,1,45,1,45,5,45,297,8,45,10,45,12,45,300,9,45,1,45,
1,45,1,45,1,45,1,45,1,298,0,46,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,
10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,
22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,
34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,
46,1,0,8,3,0,10,10,13,13,34,34,2,0,43,43,45,45,1,0,48,57,2,0,69,69,101,101,
3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,3,0,9,10,13,13,32,32,
2,0,10,10,13,13,318,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,
1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,
0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,
0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,
43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,
0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,
1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,
0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,
0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,1,93,1,0,0,0,3,95,1,0,0,0,5,97,1,0,0,0,7,
101,1,0,0,0,9,103,1,0,0,0,11,106,1,0,0,0,13,109,1,0,0,0,15,111,1,0,0,0,17,
113,1,0,0,0,19,115,1,0,0,0,21,118,1,0,0,0,23,124,1,0,0,0,25,126,1,0,0,0,
27,128,1,0,0,0,29,131,1,0,0,0,31,136,1,0,0,0,33,141,1,0,0,0,35,146,1,0,0,
0,37,151,1,0,0,0,39,157,1,0,0,0,41,162,1,0,0,0,43,168,1,0,0,0,45,172,1,0,
0,0,47,176,1,0,0,0,49,181,1,0,0,0,51,185,1,0,0,0,53,195,1,0,0,0,55,221,1,
0,0,0,57,227,1,0,0,0,59,234,1,0,0,0,61,236,1,0,0,0,63,238,1,0,0,0,65,240,
1,0,0,0,67,242,1,0,0,0,69,245,1,0,0,0,71,248,1,0,0,0,73,251,1,0,0,0,75,254,
1,0,0,0,77,257,1,0,0,0,79,259,1,0,0,0,81,261,1,0,0,0,83,264,1,0,0,0,85,268,
1,0,0,0,87,275,1,0,0,0,89,281,1,0,0,0,91,292,1,0,0,0,93,94,5,40,0,0,94,2,
1,0,0,0,95,96,5,41,0,0,96,4,1,0,0,0,97,98,5,108,0,0,98,99,5,101,0,0,99,100,
5,116,0,0,100,6,1,0,0,0,101,102,5,61,0,0,102,8,1,0,0,0,103,104,5,40,0,0,
104,105,5,41,0,0,105,10,1,0,0,0,106,107,5,61,0,0,107,108,5,62,0,0,108,12,
1,0,0,0,109,110,5,44,0,0,110,14,1,0,0,0,111,112,5,123,0,0,112,16,1,0,0,0,
113,114,5,125,0,0,114,18,1,0,0,0,115,116,5,105,0,0,116,117,5,110,0,0,117,
20,1,0,0,0,118,119,5,99,0,0,119,120,5,111,0,0,120,121,5,110,0,0,121,122,
5,115,0,0,122,123,5,116,0,0,123,22,1,0,0,0,124,125,5,91,0,0,125,24,1,0,0,
0,126,127,5,93,0,0,127,26,1,0,0,0,128,129,5,105,0,0,129,130,5,102,0,0,130,
28,1,0,0,0,131,132,5,101,0,0,132,133,5,108,0,0,133,134,5,115,0,0,134,135,
5,101,0,0,135,30,1,0,0,0,136,137,5,116,0,0,137,138,5,104,0,0,138,139,5,101,
0,0,139,140,5,110,0,0,140,32,1,0,0,0,141,142,5,98,0,0,142,143,5,111,0,0,
143,144,5,111,0,0,144,145,5,108,0,0,145,34,1,0,0,0,146,147,5,116,0,0,147,
148,5,114,0,0,148,149,5,117,0,0,149,150,5,101,0,0,150,36,1,0,0,0,151,152,
5,102,0,0,152,153,5,97,0,0,153,154,5,108,0,0,154,155,5,115,0,0,155,156,5,
101,0,0,156,38,1,0,0,0,157,158,5,110,0,0,158,159,5,117,0,0,159,160,5,108,
0,0,160,161,5,108,0,0,161,40,1,0,0,0,162,163,5,105,0,0,163,164,5,110,0,0,
164,165,5,112,0,0,165,166,5,117,0,0,166,167,5,116,0,0,167,42,1,0,0,0,168,
169,5,105,0,0,169,170,5,110,0,0,170,171,5,116,0,0,171,44,1,0,0,0,172,173,
5,115,0,0,173,174,5,116,0,0,174,175,5,114,0,0,175,46,1,0,0,0,176,177,5,108,
0,0,177,178,5,105,0,0,178,179,5,115,0,0,179,180,5,116,0,0,180,48,1,0,0,0,
181,182,5,108,0,0,182,183,5,101,0,0,183,184,5,110,0,0,184,50,1,0,0,0,185,
189,5,34,0,0,186,188,8,0,0,0,187,186,1,0,0,0,188,191,1,0,0,0,189,187,1,0,
0,0,189,190,1,0,0,0,190,192,1,0,0,0,191,189,1,0,0,0,192,193,5,34,0,0,193,
52,1,0,0,0,194,196,7,1,0,0,195,194,1,0,0,0,195,196,1,0,0,0,196,198,1,0,0,
0,197,199,7,2,0,0,198,197,1,0,0,0,199,200,1,0,0,0,200,198,1,0,0,0,200,201,
1,0,0,0,201,208,1,0,0,0,202,204,5,46,0,0,203,205,7,2,0,0,204,203,1,0,0,0,
205,206,1,0,0,0,206,204,1,0,0,0,206,207,1,0,0,0,207,209,1,0,0,0,208,202,
1,0,0,0,208,209,1,0,0,0,209,219,1,0,0,0,210,212,7,3,0,0,211,213,7,1,0,0,
212,211,1,0,0,0,212,213,1,0,0,0,213,215,1,0,0,0,214,216,7,2,0,0,215,214,
1,0,0,0,216,217,1,0,0,0,217,215,1,0,0,0,217,218,1,0,0,0,218,220,1,0,0,0,
219,210,1,0,0,0,219,220,1,0,0,0,220,54,1,0,0,0,221,222,5,112,0,0,222,223,
5,114,0,0,223,224,5,105,0,0,224,225,5,110,0,0,225,226,5,116,0,0,226,56,1,
0,0,0,227,231,7,4,0,0,228,230,7,5,0,0,229,228,1,0,0,0,230,233,1,0,0,0,231,
229,1,0,0,0,231,232,1,0,0,0,232,58,1,0,0,0,233,231,1,0,0,0,234,235,5,42,
0,0,235,60,1,0,0,0,236,237,5,47,0,0,237,62,1,0,0,0,238,239,5,43,0,0,239,
64,1,0,0,0,240,241,5,45,0,0,241,66,1,0,0,0,242,243,5,42,0,0,243,244,5,42,
0,0,244,68,1,0,0,0,245,246,5,38,0,0,246,247,5,38,0,0,247,70,1,0,0,0,248,
249,5,124,0,0,249,250,5,124,0,0,250,72,1,0,0,0,251,252,5,61,0,0,252,253,
5,61,0,0,253,74,1,0,0,0,254,255,5,33,0,0,255,256,5,61,0,0,256,76,1,0,0,0,
257,258,5,60,0,0,258,78,1,0,0,0,259,260,5,62,0,0,260,80,1,0,0,0,261,262,
5,60,0,0,262,263,5,61,0,0,263,82,1,0,0,0,264,265,5,62,0,0,265,266,5,61,0,
0,266,84,1,0,0,0,267,269,5,13,0,0,268,267,1,0,0,0,268,269,1,0,0,0,269,270,
1,0,0,0,270,271,5,10,0,0,271,272,1,0,0,0,272,273,6,42,0,0,273,86,1,0,0,0,
274,276,7,6,0,0,275,274,1,0,0,0,276,277,1,0,0,0,277,275,1,0,0,0,277,278,
1,0,0,0,278,279,1,0,0,0,279,280,6,43,0,0,280,88,1,0,0,0,281,282,5,47,0,0,
282,283,5,47,0,0,283,287,1,0,0,0,284,286,8,7,0,0,285,284,1,0,0,0,286,289,
1,0,0,0,287,285,1,0,0,0,287,288,1,0,0,0,288,290,1,0,0,0,289,287,1,0,0,0,
290,291,6,44,0,0,291,90,1,0,0,0,292,293,5,47,0,0,293,294,5,42,0,0,294,298,
1,0,0,0,295,297,9,0,0,0,296,295,1,0,0,0,297,300,1,0,0,0,298,299,1,0,0,0,
298,296,1,0,0,0,299,301,1,0,0,0,300,298,1,0,0,0,301,302,5,42,0,0,302,303,
5,47,0,0,303,304,1,0,0,0,304,305,6,45,0,0,305,92,1,0,0,0,14,0,189,195,200,
206,208,212,217,219,231,268,277,287,298,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class biesCLexer extends antlr4.Lexer {

    static grammarFileName = "biesC.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'('", "')'", "'let'", "'='", "'()'", "'=>'", 
                         "','", "'{'", "'}'", "'in'", "'const'", "'['", 
                         "']'", "'if'", "'else'", "'then'", "'bool'", "'true'", 
                         "'false'", "'null'", "'input'", "'int'", "'str'", 
                         "'list'", "'len'", null, null, "'print'", null, 
                         "'*'", "'/'", "'+'", "'-'", "'**'", "'&&'", "'||'", 
                         "'=='", "'!='", "'<'", "'>'", "'<='", "'>='" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, "BOOL", "TRUE", "FALSE", "NULL", "INPUT", 
                          "INT", "STR", "LIST", "LEN", "STRING", "NUMBER", 
                          "PRINT", "ID", "MULT", "DIV", "ADD", "SUB", "POW", 
                          "AND", "OR", "EQ", "NEQ", "LT", "GT", "LE", "GE", 
                          "NL", "WS", "COMMENT", "MULTILINE_COMMENT" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "BOOL", "TRUE", "FALSE", 
                      "NULL", "INPUT", "INT", "STR", "LIST", "LEN", "STRING", 
                      "NUMBER", "PRINT", "ID", "MULT", "DIV", "ADD", "SUB", 
                      "POW", "AND", "OR", "EQ", "NEQ", "LT", "GT", "LE", 
                      "GE", "NL", "WS", "COMMENT", "MULTILINE_COMMENT" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

biesCLexer.EOF = antlr4.Token.EOF;
biesCLexer.T__0 = 1;
biesCLexer.T__1 = 2;
biesCLexer.T__2 = 3;
biesCLexer.T__3 = 4;
biesCLexer.T__4 = 5;
biesCLexer.T__5 = 6;
biesCLexer.T__6 = 7;
biesCLexer.T__7 = 8;
biesCLexer.T__8 = 9;
biesCLexer.T__9 = 10;
biesCLexer.T__10 = 11;
biesCLexer.T__11 = 12;
biesCLexer.T__12 = 13;
biesCLexer.T__13 = 14;
biesCLexer.T__14 = 15;
biesCLexer.T__15 = 16;
biesCLexer.BOOL = 17;
biesCLexer.TRUE = 18;
biesCLexer.FALSE = 19;
biesCLexer.NULL = 20;
biesCLexer.INPUT = 21;
biesCLexer.INT = 22;
biesCLexer.STR = 23;
biesCLexer.LIST = 24;
biesCLexer.LEN = 25;
biesCLexer.STRING = 26;
biesCLexer.NUMBER = 27;
biesCLexer.PRINT = 28;
biesCLexer.ID = 29;
biesCLexer.MULT = 30;
biesCLexer.DIV = 31;
biesCLexer.ADD = 32;
biesCLexer.SUB = 33;
biesCLexer.POW = 34;
biesCLexer.AND = 35;
biesCLexer.OR = 36;
biesCLexer.EQ = 37;
biesCLexer.NEQ = 38;
biesCLexer.LT = 39;
biesCLexer.GT = 40;
biesCLexer.LE = 41;
biesCLexer.GE = 42;
biesCLexer.NL = 43;
biesCLexer.WS = 44;
biesCLexer.COMMENT = 45;
biesCLexer.MULTILINE_COMMENT = 46;



