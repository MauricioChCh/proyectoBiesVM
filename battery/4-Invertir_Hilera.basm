;Autores
;Joshua Yarit Amador Lara 
;Mauricio Alberto Chaves Chaves
;Fabiola Rojas Alvarado
;Eddy Villarreal Muñoz 

;const invertirHilera = (hilera) => {
;    let resultado = '';
;    for (let i = hilera.length - 1; i >= 0; i--) {
;        resultado += hilera[i];
;    }
;    return resultado;
;};

;const hileraOriginal = "INVERTIMOS!";
;console.log(invertirHilera(hileraOriginal));






$FUN $0
    ; Cargamos la hilera original en la pila
    LDV "INVERTIMOS!"  ; Cargar la hilera original en la pila
    BST 0 0            ; Guardamos la hilera en el binding 0, posición 0

    ; Llamamos a la función recursiva para invertir la hilera
    LDF $1             ; Cargar la función recursiva de inversión
    APP 0              ; Ejecutar la función sin argumentos
    PRN                ; Imprimir la hilera invertida
    HLT                ; Detener la ejecución
$END $0

; Función recursiva para invertir la hilera
$FUN $1
    BLD 0 0            ; Cargar la hilera original desde el binding 0
    SNT                ; Verificar si la hilera está vacía (caso base)
    BT 10              ; Si es nula (fin de la cadena), retornar la hilera vacía
    
    ; Extraer el último carácter de la hilera
    BLD 0 0            ; Cargar la hilera original
    LDV 0
    STK                ; Tomar el caracter en la posicion 0

    ; Llamada recursiva para invertir el resto de la hilera
    BLD 0 0            ; Cargar nuevamente la hilera original

    SRK 1
    BST 0 0            ; Se guarda la hilera sin el primer caracter
    LDF $1             ; Cargar la función recursiva de inversión
    APP 0              ; Llamar recursivamente
    
    ; Concatenar el carácter extraído al final de la hilera invertida
    CAT                ; Concatenar el carácter al final de la hilera invertida
    RET                ; Retornar la hilera invertida
$END $1




;INI $0        ; Iniciar el programa desde main